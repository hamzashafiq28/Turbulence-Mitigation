Logging to ./experiments/log/
creating model...
creating data loader...
training...
  0%|                                                                                                                                | 0/100000 [00:01<?, ?it/s]
Traceback (most recent call last):
  File "/home/labuser/AT_DDPM/scripts/AT_train.py", line 105, in <module>
    main(run)
  File "/home/labuser/AT_DDPM/scripts/AT_train.py", line 52, in main
    TrainLoop(
  File "/home/labuser/AT_DDPM/guided_diffusion/train_util.py", line 133, in run_loop
    self.run_step(batch, cond)
  File "/home/labuser/AT_DDPM/guided_diffusion/train_util.py", line 152, in run_step
    self.forward_backward(batch, cond)
  File "/home/labuser/AT_DDPM/guided_diffusion/train_util.py", line 183, in forward_backward
    losses = compute_losses()
  File "/home/labuser/AT_DDPM/guided_diffusion/respace.py", line 96, in training_losses
    return super().training_losses(self._wrap_model(model), *args, **kwargs)
  File "/home/labuser/AT_DDPM/guided_diffusion/gaussian_diffusion.py", line 744, in training_losses
    model_output = model(model_inp, self._scale_timesteps(t), **model_kwargs)
  File "/home/labuser/AT_DDPM/guided_diffusion/respace.py", line 123, in __call__
    return self.model(x, new_ts, **kwargs)
  File "/home/labuser/anaconda3/envs/NERF_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/labuser/anaconda3/envs/NERF_env/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1040, in forward
    output = self._run_ddp_forward(*inputs, **kwargs)
  File "/home/labuser/anaconda3/envs/NERF_env/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1000, in _run_ddp_forward
    return module_to_run(*inputs[0], **kwargs[0])
  File "/home/labuser/anaconda3/envs/NERF_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/labuser/AT_DDPM/guided_diffusion/unet.py", line 678, in forward
    return super().forward(x, timesteps, **kwargs)
  File "/home/labuser/AT_DDPM/guided_diffusion/unet.py", line 653, in forward
    h = module(h, emb)
  File "/home/labuser/anaconda3/envs/NERF_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/labuser/AT_DDPM/guided_diffusion/unet.py", line 77, in forward
    x = layer(x)
  File "/home/labuser/anaconda3/envs/NERF_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/labuser/anaconda3/envs/NERF_env/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/labuser/anaconda3/envs/NERF_env/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Given groups=1, weight of size [192, 6, 3, 3], expected input[16, 9, 256, 256] to have 6 channels, but got 9 channels instead